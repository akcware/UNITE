<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Chat system for UNITE</title>
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="A cool thing made with Glitch">
  <link id="favicon" rel="icon" href="https://glitch.com/edit/favicon-app.ico" type="image/x-icon">
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="/messages.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
  <script src="/https.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
  integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/gh/rexeze/formatTimeStamp/src/index.min.js"></script>
  <script type="text/javascript">
    
  $(document).ready(function() {      
    var token = $("input[name='_csrf']").val();
    var socket = io();
    var messages = document.getElementById("messages");
    socket.on('message', addMessages);
      
    $("form").submit(function(e) {
      let li = document.createElement("li");
      let from = $('#from').val();
      let to = $('#to').val();
      let reqId = $('#reqId').val();
      
      socket.emit("chat message", {
        msg: $("#message").val(),
        from: from,
        to: to,
        fromName: $('#fromName').val(),
        toName: $('#toName').val(),
        reqId: reqId
      });
      
      e.preventDefault(); // prevents page reloading
      messages.appendChild(li).append($("#message").val());
      let span = document.createElement("span");
      messages.appendChild(span).append("From " + "UNITE User" + ": " + "Just now.");
      $("#message").val("");
      return false;
    });
      
    socket.on("received", (data) => {
      alert(data);
      let li = document.createElement("li");
      let span = document.createElement("span");
      //var messages = document.getElementById("messages");
      messages.appendChild(li).append(data.message);
      messages.appendChild(span).append("From " + "UNITE User" + ": " + "Just now.");
      console.log("Hello, UNITE User!");
    });
    if(1==2)
    fetch("/chat")
      .then( (data) => {
        return data.json();
      })
      .then( (json) => {
       // for(var data of json) {
          //addMessage(data);
       // }
      
        json.map( (data) => {
          addMessages(data); return true;
          let li = document.createElement("li");
          let span = document.createElement("span");
          messages
            .appendChild(li)
            .append(data.message);
          
          messages
            .appendChild(span)
            .append("From " + data.sender + " to " + data.receiver + " at: " + (data.time));
        });
      });
      
  //is typing...
  let messageInput = document.getElementById("message");
  let sender = document.getElementById("from");
  let receiver = document.getElementById("to");
  let senderName = document.getElementById("fromName");
  let receiverName = document.getElementById("toName");
  let reqId = document.getElementById("reqId");
  let typing = document.getElementById("typing");  

  //isTyping event
  messageInput.addEventListener("keypress", () => {
    socket.emit("typing", {
      user: "UNITE User - " + senderName.value,
      //dest: 'UNITE User - ' + receiverName.value,
      //from: sender.value,
      //to: receiver.value,
      //reqId: reqId.value,
      message: " is typing..." });
  });

  socket.on("notifyTyping", data => {
    typing.innerText = data.user + " types " + data.message;
    //console.log(data.user + data.message);
  });

  //stop typing
  messageInput.addEventListener("keyup", () => {
    socket.emit("stopTyping", "");
  });

  socket.on("notifyStopTyping", () => {
    typing.innerText = "";
  });
      
    function putMessages(messages, data) {
      let li = document.createElement("li");
      let span = document.createElement("span");
      
      messages
        .appendChild(li)
        .append(data.message);
      messages
        .appendChild(span)
        .append("From " + data.sender + " to " + data.receiver + " at: " + (data.time));
    }
    
    function addMessages(message) {//alert(JSON.stringify(message));
       $('#messages1').append('<h4>' + message.sender + '</h4><p>' + message.message + '</p>');
    }

    function getMessages() {
      $.ajax({
        url: "/messages",
        data: {
          from: sender.value,
          to: receiver.value
        },
        headers: { "X-CSRF-Token": token },
        datatype: 'application/json',
        type: "GET",
        error: function() {
          console.log('error');
        },
        success: function(data) {
          //data.forEach(addMessages);
          var msg = document.getElementById("messages");
          for(item of data) {
            putMessages(msg, item);
          }
        }
      });
      
      if(1==2)
      $.get('/messages', { "X-CSRF-Token": token}, (data) => {
         data.forEach(addMessages);
       });
     }

    function sendMessage(message) {
      $.ajax({
        url: "/messages",
        headers: { "X-CSRF-Token": token },
        datatype: 'application/json',
        type: "POST",
        data: message,
        success: function(data) {
          //data.forEach(addMessages);
        }
      });
      if(1==2)
       $.post('/messages', { "X-CSRF-Token": token}, message);
     }

      $("#send").click(function() {
       sendMessage({
         from: sender.value,
         to: receiver.value,
         sender: $('#fromName').val(),
         receiver: $('#toName').val(),
         bidRequestId: reqId.value,
         message:$("#message").val()});
        });

    getMessages();
    });
  </script>
</head>
  
<body>
  <div class="container">
    <div>  
      <input type="button" class="btn btn-primary" value="Back" onclick="history.go(-1)">
    </div>
    <br>
      <div class="chat_window">
          <div class="top_menu">
          <div class="buttons">
          <div class="button close"></div>
          <div class="button minimize"></div>
          <div class="button maximize"></div>
      </div>
          <div class="title">Chat system</div>
      </div>
        <ul id="messages" class="messages">
        </ul>
      <div id="messages1" style="color: fuchsia">
      </div>
      <div class="bottom_wrapper clearfix">
        <br>
          <input type='hidden' id="name" class="form-control" placeholder=”Name”>
        <br>
        <i id="typing"></i>
          <form id="form">
            <div class="message_input_wrapper">
              <input type="hidden" id="from" value="<%= from %>"/>
              <input type="hidden" id="to" value="<%= to %>"/>
              <input type="hidden" id="reqId" value="<%= reqId %>"/>                
              <input type="hidden" id="fromName" value="<%= fromName %>"/>
              <input type="hidden" id="toName" value="<%= toName %>"/>
              <input id="message" class="message_input" placeholder="Type your message here...">
            </div>
              <input type="hidden" name="_csrf" value="<%= csrfToken %>">
              <button id="send" class="btn btn-primary send_message">Send</button>
          </form>
      </div>      
    </div>
  </div>
    
</body>
</html>